package main

import (
	"bytes"
	"reflect"
	"testing"

	"github.com/pmatseykanets/mempool/types"
	"github.com/shopspring/decimal"
)

func TestParseTx(t *testing.T) {
	txLine := "TxHash=40E10C7CF56A738C0B8AD4EE30EA8008C7B2334B3ADA195083F8CB18BD3911A0 Gas=729000 FeePerGas=0.11134106816568039 Signature=6386A3893BEB6A5A64E0677F406634E791DEE78D49CF30581AE5281D4094E495E671647EF5E7FD2D207AB8EBA0EA693703E9C368402731BE99E81BDB748EA662"

	tx := &types.Transaction{Gas: 729000, FeePerGas: decimal.New(11134106816568039, -17)}
	tx.Hash.SetString("40E10C7CF56A738C0B8AD4EE30EA8008C7B2334B3ADA195083F8CB18BD3911A0")
	tx.Signature.SetString("6386A3893BEB6A5A64E0677F406634E791DEE78D49CF30581AE5281D4094E495E671647EF5E7FD2D207AB8EBA0EA693703E9C368402731BE99E81BDB748EA662")

	parsed, err := parseTx(txLine)
	if err != nil {
		t.Fatal(err)
	}

	if want, got := tx, parsed; !reflect.DeepEqual(want, got) {
		t.Errorf("Expected %v got %v", want, got)
	}
}

func TestWriteTx(t *testing.T) {
	txLine := "TxHash=40E10C7CF56A738C0B8AD4EE30EA8008C7B2334B3ADA195083F8CB18BD3911A0 Gas=729000 FeePerGas=0.11134106816568039 Signature=6386A3893BEB6A5A64E0677F406634E791DEE78D49CF30581AE5281D4094E495E671647EF5E7FD2D207AB8EBA0EA693703E9C368402731BE99E81BDB748EA662"

	tx := &types.Transaction{Gas: 729000, FeePerGas: decimal.New(11134106816568039, -17)}
	tx.Hash.SetString("40E10C7CF56A738C0B8AD4EE30EA8008C7B2334B3ADA195083F8CB18BD3911A0")
	tx.Signature.SetString("6386A3893BEB6A5A64E0677F406634E791DEE78D49CF30581AE5281D4094E495E671647EF5E7FD2D207AB8EBA0EA693703E9C368402731BE99E81BDB748EA662")

	var buf bytes.Buffer

	_, err := writeTx(&buf, tx)
	if err != nil {
		t.Fatal(err)
	}

	if want, got := txLine, buf.String(); want != got {
		t.Errorf("Expected\n%sgot\n%s", want, got)
	}
}
